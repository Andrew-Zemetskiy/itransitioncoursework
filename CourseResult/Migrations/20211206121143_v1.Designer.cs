// <auto-generated />
using CourseResult.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CourseResult.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211206121143_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CourseResult.Models.Overview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsersNickname")
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("UsersNickname");

                    b.ToTable("Overviews");
                });

            modelBuilder.Entity("CourseResult.Models.User", b =>
                {
                    b.Property<string>("Nickname")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Nickname");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseResult.Models.Overview", b =>
                {
                    b.HasOne("CourseResult.Models.User", "Users")
                        .WithMany("Overviews")
                        .HasForeignKey("UsersNickname");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CourseResult.Models.User", b =>
                {
                    b.Navigation("Overviews");
                });
#pragma warning restore 612, 618
        }
    }
}
